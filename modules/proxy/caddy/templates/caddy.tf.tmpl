resource "caddy_server_block" "caddy-{{ $.Project.Name }}" {
  filename = "{{ $.Project.Name }}.conf"

  markers = {
    docker_ports = "{{$.AllPortsTfString}}"
  }
  markers_split = {
    docker_ports = ","
  }

  content = <<EOF
{{ range $index, $domainConfig := $.Project.Domains }}
  {{ range $index2, $expose := $domainConfig.Expose }}
    {{ if ne $expose.ExternalPort 443 }}

{{ $domainConfig.Domain }}{{ if ne $expose.ExternalPort 80 }}:{{ $expose.ExternalPort }}{{ end }} {
    reverse_proxy localhost:{~ docker_ports[{{ getPortIndex $expose.Service $expose.InternalPort }}] ~}

{{ $basicAuths := getBasicAuths $domainConfig.Security.Authentication }}
{{ if $basicAuths }}
    basicauth * {
      {{ range $index3, $item := $basicAuths }}
        {{ $item.Username }} {{ b64enc ($item.Password | crypto.Bcrypt) }}
      {{ end }}
    }
{{ end }}
}
    {{ end }}
  {{ end }}
{{ end }}
EOF

{{if $.DependentContainers}}
  depends_on = [{{$.DependentContainers}}]
{{end}}

  provisioner "local-exec" {
    command = "caddy reload --config /etc/caddy/Caddyfile"
  }
  provisioner "local-exec" {
    when = destroy
    command = "caddy reload --config /etc/caddy/Caddyfile"
  }
}
