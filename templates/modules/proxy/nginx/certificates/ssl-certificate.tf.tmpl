resource "tls_private_key" "{{ $.Project.Name }}-private_key" {
  algorithm = "RSA"
}

resource "acme_registration" "{{ $.Project.Name }}-reg" {
  account_key_pem = tls_private_key.{{ $.Project.Name }}-private_key.private_key_pem
  email_address   = "{{ if $.CertificatesMailAddress }}{{ $.CertificatesMailAddress }}{{ else }}certificates-noreply@stackhead.io{{ end }}"
}

resource "acme_certificate" "{{ $.Project.Name }}-certificate" {
  account_key_pem           = acme_registration.{{ $.Project.Name }}-reg.account_key_pem
  common_name               = "{{ (index $.Project.Domains 0).Domain }}"
  subject_alternative_names = {{ (GetDomainNames $.Project.Domains 1) }}

  depends_on = [
    nginx_server_block.nginx-{{ $.Project.Name }}
  ]

  dns_challenge {
    method = "http"
    provider = "exec"

    config = {
      EXEC_PATH = "{{ $.Project.GetDirectoryPath }}/acme_challenge_resolver.sh"
      EXEC_MODE = "RAW"
    }
  }
}

resource "local_file" "{{ $.Project.Name }}-acme-privkey" {
  filename = "{{ $.Paths.ProjectCertificatesDirectory }}/privkey.pem"
  sensitive_content = acme_certificate.{{ $.Project.Name }}-certificate.private_key_pem
}

resource "local_file" "{{ $.Project.Name }}-acme-fullchain" {
  filename = "{{ $.Paths.ProjectCertificatesDirectory }}/fullchain.pem"
  sensitive_content = acme_certificate.{{ $.Project.Name }}-certificate.certificate_pem
  depends_on = [
    local_file.{{ $.Project.Name }}-acme-privkey
  ]
  provisioner "local-exec" {
    # Symlink to project certificate files to generated files
    command = <<EOT
        ln -sf {{ $.Paths.ProjectCertificatesDirectory }}/fullchain.pem {{ $.Paths.CertificatesProjectDirectory }}/fullchain.pem &&
        ln -sf {{ $.Paths.ProjectCertificatesDirectory }}/privkey.pem {{ $.Paths.CertificatesProjectDirectory }}/privkey.pem &&
        sudo systemctl reload nginx
EOT
  }
  provisioner "local-exec" {
    when = destroy
    # Symlink project certificate files to snakeoil files
    command = <<EOT
        ln -sf {{ $.Paths.SnakeoilFullchainPath }} {{ $.Paths.CertificatesProjectDirectory }}/fullchain.pem &&
        ln -sf {{ $.Paths.SnakeoilPrivkeyPath }} {{ $.Paths.CertificatesProjectDirectory }}/privkey.pem &&
        sudo systemctl reload nginx
EOT
  }
}
