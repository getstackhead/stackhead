name: Test CLI

on:
  pull_request:
    types: [opened, labeled, unlabeled, synchronize]
    branches:
      - master
      - next
    paths:
      - .github/workflows/test-cli.yml

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Build
        run: sh ./.build/build.sh

      - uses: actions/upload-artifact@v2
        with:
          name: stackhead-cli
          path: ./bin/stackhead-cli

  test-unit:
    name: Unit Test
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go 1.18
        uses: actions/setup-go@v2
        with:
          go-version: 1.18

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Test
        run: go test ./...

  test-validation:
    name: Test validation
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2
      - name: Download StackHead CLI artifact
        uses: actions/download-artifact@v2
        with:
          name: stackhead-cli
          path: /home/runner/bin
      - name: Set execution permission on binary
        run: chmod +x /home/runner/bin/stackhead-cli
        working-directory: /home/runner/bin
      - name: Perform validation tests
        run: |
          /home/runner/bin/stackhead-cli init
          /home/runner/bin/stackhead-cli cli validate ./schemas/examples/cli-config/valid/cli.yml
          /home/runner/bin/stackhead-cli module validate ./schemas/examples/module-config/valid/container-module.yml
          /home/runner/bin/stackhead-cli project validate ./schemas/examples/project-definition/valid/project.stackhead.yml
          /home/runner/bin/stackhead-cli project validate ./schemas/examples/project-definition/valid/project-secured.stackhead.yaml
          cp ./schemas/examples/project-definition/valid/project.stackhead.yml ./schemas/examples/project-definition/invalid/project.yml
          /home/runner/bin/stackhead-cli project validate ./schemas/examples/project-definition/invalid/project.yml && returncode=$? || returncode=$?
          if [ $returncode -eq 0 ]; then
            echo "File above should not have validated due to invalid file extension!"
            exit 1
          fi
