name: 'StackHead Acceptance Test'
description: 'Perform StackHead acceptance test'
author: 'Mario Lubenka'
inputs:
  ipaddress:
    description: 'IP address of the server'
    required: true
  domain:
    description: 'Domain'
    required: true
  domain2:
    description: 'Second domain'
    required: true
  webserver:
    description: 'Webserver module to use'
    required: false
    default: getstackhead.stackhead_webserver_nginx
  dns:
    description: 'DNS module to use'
    required: false
  dns_cloudflare_apitoken:
    description: 'Cloudflare API token (if Cloudflare DNS module is used)'
    required: false
  container:
    description: 'Container module to use'
    required: false
    default: getstackhead.stackhead_container_docker
  plugins:
    description: 'Plugin modules to use (as YAML array)'
    required: false
    default: '[]'
  rolename:
    description: 'Name of role that is being tested'
    required: false
  selftest:
    description: 'Set if this test is run on the StackHead main repository'
    required: false
  cli_bin_path:
    description: 'Path to CLI binary'
    required: false
  version:
    description: 'Version of StackHead to use (default: next)'
    required: false
runs:
  using: "composite"
  steps:
    # local execution action path: /home/runner/work/stackhead/stackhead/./actions/integration-test
    # other repository action path: /home/runner/work/_actions/getstackhead/stackhead/next/actions/integration-test
    - name: get tag of this action
      shell: bash
      id: action_tag
      run: |
        ACTION_TAG="${{ env.GITHUB_HEAD_REF }}"
        STACKHEAD_CLONE_LOCATION="${{ github.action_path }}/../.."
        if [[ "${{ github.repository }}" != "getstackhead/stackhead" ]]; then
          ACTION_TAG=$(echo "${{ github.action_path }}" | sed -r 's/^.*stackhead\/(.*)\/actions.*$/\1/')
          git clone -b "${ACTION_TAG}" --depth 1 https://github.com/getstackhead/stackhead.git "${{ github.action_path }}/stackhead"
          STACKHEAD_CLONE_LOCATION="${{ github.action_path }}/stackhead"
        fi
        echo "::set-output name=STACKHEAD_CLONE_LOCATION::$STACKHEAD_CLONE_LOCATION"
        echo "::debug::Location of StackHead repository: ${STACKHEAD_CLONE_LOCATION}"
    - name: Add IP to known_hosts
      shell: bash
      run: "ssh-keyscan -v -T 30 ${{ inputs.ipaddress }} >> ~/.ssh/known_hosts"
    - name: "Build collection and install dependencies"
      shell: bash
      env:
        INPUT_ROLENAME: ${{ inputs.rolename }}
        INPUT_DNS: ${{ inputs.dns }}
        INPUT_DNS_CLOUDFLARE_APITOKEN: ${{ inputs.dns_cloudflare_apitoken }}
        INPUT_WEBSERVER: ${{ inputs.webserver }}
        INPUT_CONTAINER: ${{ inputs.container }}
        INPUT_PLUGINS: ${{ inputs.plugins }}
        INPUT_CLI_BIN_PATH: ${{ inputs.cli_bin_path }}
        INPUT_SELFTEST: ${{ inputs.selftest }}
        INPUT_VERSION: ${{ inputs.version }}
        STACKHEAD_CLONE_LOCATION: ${{ steps.action_tag.outputs.STACKHEAD_CLONE_LOCATION }}
      run: ${{ github.action_path }}/steps/build.sh
    - name: "Setup server"
      shell: bash
      env:
        INPUT_IPADDRESS: ${{ inputs.ipaddress }}
        INPUT_DNS: ${{ inputs.dns }}
        INPUT_DNS_CLOUDFLARE_APITOKEN: ${{ inputs.dns_cloudflare_apitoken }}
        INPUT_WEBSERVER: ${{ inputs.webserver }}
        INPUT_CONTAINER: ${{ inputs.container }}
        INPUT_PLUGINS: ${{ inputs.plugins }}
        INPUT_ROLENAME: ${{ inputs.rolename }}
        INPUT_SELFTEST: ${{ inputs.selftest }}
        INPUT_VERSION: ${{ inputs.version }}
        INPUT_CLI_BIN_PATH: ${{ inputs.cli_bin_path }}
        STACKHEAD_CLONE_LOCATION: ${{ steps.action_tag.outputs.STACKHEAD_CLONE_LOCATION }}
      run: ${{ github.action_path }}/steps/setup.sh
    - name: "Deploy application"
      shell: bash
      run: ${{ github.action_path }}/steps/deploy.sh
      env:
        INPUT_IPADDRESS: ${{ inputs.ipaddress }}
        INPUT_DOMAIN: ${{ inputs.domain }}
        INPUT_DOMAIN2: ${{ inputs.domain2 }}
        INPUT_DNS: ${{ inputs.dns }}
        INPUT_DNS_CLOUDFLARE_APITOKEN: ${{ inputs.dns_cloudflare_apitoken }}
        INPUT_WEBSERVER: ${{ inputs.webserver }}
        INPUT_CONTAINER: ${{ inputs.container }}
        INPUT_PLUGINS: ${{ inputs.plugins }}
        INPUT_CLI_BIN_PATH: ${{ inputs.cli_bin_path }}
        STACKHEAD_CLONE_LOCATION: ${{ steps.action_tag.outputs.STACKHEAD_CLONE_LOCATION }}
    - name: "Validate deployment"
      shell: bash
      run: ${{ github.action_path }}/steps/validate.sh
      env:
        INPUT_IPADDRESS: ${{ inputs.ipaddress }}
        INPUT_DOMAIN: ${{ inputs.domain }}
        INPUT_DOMAIN2: ${{ inputs.domain2 }}
        INPUT_CLI_BIN_PATH: ${{ inputs.cli_bin_path }}
    - name: "Destroy deployment"
      shell: bash
      run: ${{ github.action_path }}/steps/destroy.sh
      env:
        INPUT_IPADDRESS: ${{ inputs.ipaddress }}
        INPUT_CLI_BIN_PATH: ${{ inputs.cli_bin_path }}
        STACKHEAD_CLONE_LOCATION: ${{ steps.action_tag.outputs.STACKHEAD_CLONE_LOCATION }}
