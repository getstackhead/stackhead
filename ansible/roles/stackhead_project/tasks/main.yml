---
- include_vars: "../vars/internal.yml"
- include_vars: "../roles/stackhead_module_api/defaults/main.yml"
- include_vars: "../roles/stackhead_module_api/vars/main.yml"

- import_tasks: "../roles/stackhead_setup/tasks/facts-load.yml"
- import_tasks: "../roles/stackhead_project/tasks/validate-stackhead-version.yml"
- import_tasks: "../roles/stackhead_project/tasks/projectconfig-load.yml"

- import_tasks: "../roles/stackhead_module_api/tasks_internal/load-all-modules-config.yml"

- block:
    - name: "Check if project directory exists | Project: {{ project_name }}"
      stat:
        path: "{{ stackhead__tf_project_folder }}"
      register: project_folder
    - name: "Create project directory if not exists | Project: {{ project_name }}"
      file:
        path: "{{ stackhead__tf_project_folder }}"
        state: directory
        owner: stackhead
        group: stackhead
      when: project_folder.stat.exists == false and ensure == 'present'

# The following tasks will generate and deploy Terraform configuration files to the remote server
- name: "Prepare certificates directory | Project: {{ project_name }}"
  import_tasks: "../roles/stackhead_project/tasks/ssl/ssl-prepare-certificates.yml"

- block:
    - name: "Collect exposed services"
      set_fact:
        containerapp__expose: "{{ containerapp__expose|d([]) + item.expose }}"
      when: item.expose|d([]) != [] and item.expose not in containerapp__expose|d([])
      with_items: "{{ app_config.domains }}"
    - import_tasks: "../roles/stackhead_module_api/tasks_internal/deployment.yml"
  when: ensure == 'present'

- include_tasks: "../roles/stackhead_module_api/tasks_internal/destroy.yml"
  when: ensure == 'absent'

- name: Symlink Terraform providers
  file:
    state: link
    src: "{{ stackhead__tf_root_folder }}/terraform-providers.tf"
    dest: "{{ stackhead__tf_project_folder }}/terraform-providers.tf"
  when: ensure == 'present'
- name: Remove Terraform files
  block:
    - name: Find all terraform files except symlinks
      find:
        paths: "{{ stackhead__tf_project_folder }}"
        patterns: '*.tf'
        excludes: '*.provider.tf'
        file_type: file
      register: terraform_files
    - file:
        state: absent
        path: "{{ item.path }}"
      with_items: "{{ terraform_files.files }}"
  when: ensure == 'absent'
- import_tasks: "../roles/config_terraform/tasks/execute.yml"
  vars:
    terraform_folder: "{{ stackhead__tf_project_folder }}"
  when: stackhead_config.terraform.manual_update or ensure == 'absent'
- file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ stackhead__project_folder }}"
    - "{{ stackhead__certificates_project_folder }}"
  when: ensure == 'absent'


- name: Create project specific crontab
  include_tasks: "../roles/config_terraform/tasks/setup_crontab.yml"
  when: ensure == 'present'
- name: Remove project specific crontab
  include_tasks: "../roles/config_terraform/tasks/remove_crontab.yml"
  when: ensure == 'absent'
