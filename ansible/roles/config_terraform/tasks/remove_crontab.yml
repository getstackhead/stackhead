# Setup crontask for applying Terraform files every x minutes
#
# Input:
# - update_interval (default: update interval set in stackhead_config
#
- shell: which terraform
  register: terraform_bin_abs_path
- name: Remove systemd service
  block:
    - systemd:
        name: "{{ item.service_name | replace(' ', '_') }}.{{ (item.timer is defined) | ternary('timer', 'service') }}"
        state: stopped
      with_items: "{{ systemd_services }}"
    - file:
        state: absent
        path: "/etc/systemd/system/{{ item.service_name | replace(' ', '_') }}.service.d"
      when: "'systemd_overrides' in item"
      with_items: "{{ systemd_services }}"
    - file:
        state: absent
        path: "/etc/systemd/system/{{ item.service_name | replace(' ', '_') }}.service"
      when: not (item.systemd_overrides_only | default(False) | bool)
      with_items: "{{ systemd_services }}"
    - file:
        state: absent
        path: "/etc/systemd/system/{{ item.service_name | replace(' ', '_') }}.timer"
      when:
        - item.timer is defined
      with_items: "{{ systemd_services }}"
    - file:
        state: absent
        path: "/etc/systemd/system/{{ item.1.socket_name | replace(' ', '_') }}.socket"
      loop: "{{ systemd_services | subelements('sockets', skip_missing=True) }}"
  vars:
    systemd_services:
      - service_name: "stackhead-apply-terraform-{{ project_name }}"
        timer:
          state: "started"
          options:
            Unit: "stackhead-apply-terraform-{{ project_name }}.service"
            OnCalendar: "{{ update_interval|d(stackhead_config.terraform.update_interval) }}"
            Persistent: true
- name: Reload systemd
  systemd:
    daemon_reload: yes
